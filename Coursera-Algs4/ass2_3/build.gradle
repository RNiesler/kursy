apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'checkstyle'
apply plugin: 'findbugs'
//apply plugin: 'groovy'
apply plugin: 'pmd'

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.3'
    }
}

sourceCompatibility = '1.9'
targetCompatibility = '1.9'
ext {
    junitVersion = '5.0.3'
}

apply plugin: 'org.junit.platform.gradle.plugin'

repositories {
    mavenLocal()
    mavenCentral()
}

//junitPlatform {
//    filters {
//        engines {
//            include 'junit-jupiter'
//        }
//    }
//}

dependencies {
    compile files('../libs/algs4.jar')
//    compile 'org.codehaus.groovy:groovy-all:2.4.13'
//    testCompile 'org.spockframework:spock-core:1.1-groovy-2.4'
    testCompile(
            "org.junit.jupiter:junit-jupiter-api:${junitVersion}",
            "org.junit.jupiter:junit-jupiter-params:${junitVersion}",
    )
    // Only needed to run tests in an IntelliJ IDEA that bundles an older version
    testRuntime("org.junit.platform:junit-platform-launcher:1.0.3")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")
    testRuntime("org.junit.vintage:junit-vintage-engine:4.12.1")
}

tasks.withType(Checkstyle) {
    configFile = new File('../checkstyle-algs4.xml')
}

tasks.withType(FindBugs) {
    excludeFilter = new File('../findbugs.xml')
}

task submission(type: Zip) {
    from 'src/main/java'
    archiveName = 'baseball.zip'
    includes = ['BaseballElimination.java']
}
